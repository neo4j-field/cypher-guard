name: CI

on:
  push:
    branches: [ main, feat/validation-rewrite ]
  pull_request:
    branches: [ main, feat/validation-rewrite ]

env:
  PYO3_USE_ABI3_FORWARD_COMPATIBILITY: 1

jobs:
  test-rust:
    name: Test Rust Code
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust ${{ matrix.rust }}
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: clippy, rustfmt
    
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
    
    - name: Check code formatting
      run: cargo fmt --all -- --check
    
    - name: Lint with clippy
      run: cd rust/cypher_guard && cargo clippy --features python-bindings -- -D warnings -A clippy::uninlined_format_args
    
    - name: Build
      run: cd rust/cypher_guard && cargo build --verbose
    
    - name: Run tests
      run: cd rust/cypher_guard && cargo test --verbose

  test-python:
    name: Test Python Bindings
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        version: latest
    
    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: rust/python_bindings/.venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('rust/python_bindings/uv.lock') }}
    
    - name: Install dependencies
      run: cd rust/python_bindings && uv sync
    
    - name: Build Python bindings
      run: cd rust/python_bindings && uv run maturin develop
    
    - name: Run Python tests
      run: cd rust/python_bindings && uv run pytest tests/ -vv

  test-js:
    name: Test JavaScript Bindings
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: rust/js_bindings/package-lock.json
    
    - name: Install dependencies
      run: cd rust/js_bindings && npm ci
    
    - name: Build JavaScript bindings
      run: cd rust/js_bindings && npm run build
    
    - name: Run JavaScript tests
      run: cd rust/js_bindings && npm test
  